{{#operations}}class_name {{classname}}

{{#operation}}
func {{operationIdSnakeCase}}(
{{>partials/api_method_params}}
) -> {{returnType}}:
    var oapi_path := "{{{contextPath}}}{{{path}}}"{{#pathParams}}.replace("{" + "{{baseName}}" + "}", {{{paramName}}}){{/pathParams}}
    var oapi_request: BaseRequest = Unirest.{{httpMethod}}(oapi_path) \
        .header("Accept", "application/json")

    var oapi_query = {}
    {{#queryParams}}
    oapi_query["{{baseName}}"] = {{paramName}}
    {{/queryParams}}


    {{#pathParams}}
        # TODO:
        #oapi_path =  str_replace(
        #'{' . '{{baseName}}' . '}',
        #ObjectSerializer::toPathValue(${{paramName}}),
    {{/pathParams}}

    {{#formParams}}
        {{#isFile}}
            #$multipart = true;
            #$formParams['{{baseName}}'] = [];
            #$paramFiles = is_array(${{paramName}}) ? ${{paramName}} : [${{paramName}}];
            #foreach ($paramFiles as $paramFile) {
            #$formParams['{{baseName}}'][] = \GuzzleHttp\Psr7\Utils::tryFopen(
            #ObjectSerializer::toFormValue($paramFile),
            #'rb'
            #);
            #}
        {{/isFile}}
        {{^isFile}}
            #$formParams['{{baseName}}'] = ObjectSerializer::toFormValue(${{paramName}});
        {{/isFile}}
        }
    {{/formParams}}



    {{#bodyParams}}
    oapi_request.body({{paramName}})
    {{/bodyParams}}

    var oapi_response = await oapi_request.as_object({{returnType}}.new())
    if oapi_response.error != null:
        print("errorResponse:", oapi_response.error)
        if on_failure != null:
            on_failure.call()
        return null

    return oapi_response.get_body()

{{/operation}}
{{/operations}}
