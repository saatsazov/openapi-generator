# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# The OpenAPI Generator Community, Â© Public Domain, 2022

# DemoCategory Model
# A category for a pet
# namespace: models

extends RefCounted
class_name DemoCategory

# It's convenient to know the class name, for error messages.
# https://github.com/godotengine/godot/issues/21789
var bee_class_name := "DemoCategory"


# Type: float
# Required: False
# isArray: false
var id: float:
	set(value):
		__id__was__set = true
		id = value
var __id__was__set := false

# Type: String
# Required: False
# isArray: false
var name: String:
	set(value):
		__name__was__set = true
		name = value
var __name__was__set := false


func bee_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	return bzz_missing_properties


func bee_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__id__was__set:
		bzz_dictionary["id"] = self.id
	if self.__name__was__set:
		bzz_dictionary["name"] = self.name
	return bzz_dictionary


# Won't work for JSON+LD
static func bee_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("id"):
		me.id = from_dict["id"]
	if from_dict.has("name"):
		me.name = from_dict["name"]
	return me


# Won't work for JSON+LD
static func bee_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bee_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bee_denormalize_single(element))
		else:
			mes.append(element)
	return mes

